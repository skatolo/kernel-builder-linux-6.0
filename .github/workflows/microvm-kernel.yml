name: microvm-kernel


on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
      - main
  workflow_dispatch:

  
jobs:
  build:
    name: microvm-kernel-${{ matrix.label }}
    runs-on: [actuated-8cpu-32gb, "${{ matrix.label }}" ]
    strategy:
      matrix:
        label: [zfs, devmapper]

    steps:
# vmmeter start
      - uses: alexellis/setup-arkade@master
      - uses: self-actuated/vmmeter-action@master
  # vmmeter end

      - name: Setup RAM disk for Linux
        run: |
          mkdir `pwd`/src
          # sudo chown -R $(whoami) `pwd`/src
          # sudo mount -o size=16G -t tmpfs none `pwd`/src
          # sudo chown -R $(whoami) `pwd`/src
          # df -h
      - name: free RAM
        run: free -h
      - name: List CPUs
        run: nproc
      - name: get build toolchain
        run: |
          sudo apt update -qy
          sudo apt-get install -qy \
            git \
            build-essential \
            fakeroot \
            libncurses5-dev \
            libssl-dev \
            ccache \
            bison \
            flex \
            libelf-dev \
            dwarves \
            bc
      - name: clone linux
        run: |
          time git clone https://github.com/torvalds/linux.git src/linux.git --depth=1 --branch v6.13
      - name: make config
        run: |
          cd src/linux.git 
          # Generate a default config
          #make defconfig

          # Generate a minimal config
          make allnoconfig

          # Turn off a couple of things
          scripts/config --disable SYSTEM_TRUSTED_KEYS
          scripts/config --disable SYSTEM_REVOCATION_KEYS
          scripts/config --disable SYSTEM_TRUSTED_KEYRING 

          # Make the config
          make LOCALVERSION= olddefconfig

      - name: Make vmlinux
        run: |
          cd src/linux.git
          time make vmlinux -j$(nproc)
          du -h ./vmlinux

      - name: Check RAM disk usage and clean it up
        if: always()
        run: |
          df -h `pwd`/src
          sudo umount `pwd`/src || true
          rm -rf `pwd`/src
